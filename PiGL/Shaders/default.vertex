# version 330

layout(location = 0) in vec3 in_vert; // Vertices
layout(location = 1) in vec3 in_color; // Colors
layout(location = 2) in vec3 in_normal; // Normals

uniform mat4 M; // Model matrix
uniform mat4 V; // View matrix
uniform mat4 P; // Projection matrix

out vec3 frag_pos;
out vec3 normal;
out vec4 color;

void main() {
    mat4 MVP = P * V * M;
    color = vec4(in_color, 1.0);

    frag_pos = vec3(M * vec4(in_vert, 1.0));
    normal = mat3(transpose(inverse(M))) * in_normal;
    gl_Position = MVP * vec4(in_vert, 1.0);
}
